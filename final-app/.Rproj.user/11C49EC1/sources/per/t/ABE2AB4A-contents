# load libraries
library(shiny)
library(tidyverse)

#load and clean data
emissions <- read_csv("data/CO2_emission.csv") %>% 
  drop_na()

emissions <- emissions[, -35]
emissions <- emissions[, -2]
emissions <- emissions[, -3]

colnames(emissions)[32]  <- "2019"
colnames(emissions)[1]  <- "country_name"
emissions$mean <-apply(emissions[, 3:32],1,mean)

# unique region names
region_names <- unique(emissions$Region)

# unique country names
country_names <- unique(emissions$country_name)


# UI

ui <- fluidPage(
  
  titlePanel("CO2 Emissions Per Capita"),
  
  tabsetPanel(
    # CO2 emissions compared across regions
    tabPanel("World View", 
             br(), 
             br(),
             br(), 
             br(),
             plotOutput("world"),
             br(),
             br(),
             #helper text
             fluidPage(column(4, 
                              "The graph above compares the mean CO2 emissions per capita of regions in the world.
                              As we can see, North America and the Middle East & North Africa regions have the 
                              highest mean CO2 emissions per capita. ",
                              offset = 4))),

    tabPanel("Regional View", 
             br(),
             selectInput("regions",
                         label = "Choose a region to display", 
                         choices = region_names,
                         selected = "North America"),
             br(),
             plotOutput("region"),
             br(),
             br(),
             #helper text
             fluidPage(column(4, 
                              "The graph above visualizes the mean CO2 emissions per capita for each country in the region 
                              you select. From the drop box above, click on one of the seven regions to compare the
                              CO2 emissions of countries in that region!",
                              offset = 4))), 
    tabPanel("Country View",
             br(),
             selectInput("countries",
                         label = "Choose a country to display", 
                         choices = country_names,
                         selected = "United States"),
             br(),
             plotOutput("country"),
             br(),
             br(),
             # helper text
             fluidPage(column(4, 
                              "The graph above visualizes a country's CO2 emissions per capita from 1990-2019.
                              Choose any country from the many in the dropbox above and see how a specific 
                              country's CO2 emissions change over time!",
                              offset = 4))),
    tabPanel("Additional Information",
             br(),
             br(),
             br(),
             #What is the core concept(s) or insight(s) into the data that you believe the visualization communicates? 
             #If you choose to include animation then explain why animation helps. 
             #If you build an app then explain your choice of widgets and what about the data it help users understand.
             fluidPage(column(10,
                              "Because this dataset included so much data, including 200 countries, CO2 emissions per capita for each country 
                              from 1990-2019, as well as the region each country is in, I wanted to develop 3 graphics that would start from a over-arching
                              and 'wide' view and work itself in to become more 'narrow' and specific.",
                              offset = 1)),
             br(),
            fluidPage(column(10,
                             "The first graphic that is displayed is the 'World View' map. This visualization is a great initial
                              insight into the dataset, as it is easy to compare the emissions of the regions included in the dataset. 
                              You can easily identify the regions that are top emitters (North America and Middle East & North Africa), and those 
                              that are the lowest (South Asia and Sub-Saharan Africa).",
                              offset = 1)),
            br(),
            fluidPage(column(10,
                             "The next graphic is the next tab under 'Regional View'. This graphic goes from the world view to more specific, by 
                              visualizing a specific region. I animated this graph as rather than displaying 7 different graphs on one tab, the
                              user can choose any region that they want to display at a time. This visualization is similar to the 'World View' map, 
                              but dives into the next 'level', which is 'regional'. The visualization compares the CO2 emissions 
                              for each country in a region, which the user chooses. Thus, the user can identify the top emitting and lowest emitting
                              countries for each region. For instance, if an individual were to wonder who the top emitter for the Middle East & North Africa
                              was (because that region had high CO2 emissions), they could see that Qatar was the highest emitting country for that region.",
                             offset = 1)),
            br(),
            fluidPage(column(10,
                             "The last graph is under the tab 'Country View'. This allows for the 'narrowest' and most specific graph. This visualization
                              allows a user to choose from any of the 200 countries included in this dataset and see how it's CO2 emissions have changed
                              from 1990 to 2019. For instance, if the individual was curious about Qatar's emissions throughout the years, they could choose
                              the country in the dropbox and see that Qatar's emissions peaked between 1990 and 2003 and have decreased since. To use the
                              dataset to its full potential, it was necessary to animate this graph so that any of the 200 countries have the option to be visualized.",
                             offset = 1)))))
                              
                        


# Server
server <- function(input, output) {
  
  # CO2 emissions per country
  output$country <- renderPlot({
    without_mean <- emissions[, -2] 
    without_mean <- without_mean[, -32] 
  
  
    country_data <- without_mean %>% 
        pivot_longer(cols = !country_name,
                 names_to = "year",
                 values_to = "emissions")
  
    random <-country_data %>% 
        filter(country_name == input$countries) 
  
    ggplot(random, aes(year, emissions, group = 1)) +
      geom_line() +
      scale_y_continuous(limits = c(0, NA),
                        labels = scales::label_number(prefix = "", suffix = " metric tons")) +
      theme_minimal() +
      labs(x = "Year", y = "CO2 Emissions Per Capita",
           title = "CO2 Emissions Per Capita From 1990-2019",
           subtitle = input$countries,
           caption = "Source: Ghosh, Koustav. “CO2 Emissions around the World.”") +
      theme(axis.text.x = element_text(size = 10),
          axis.title = element_text(size = 13),
          plot.caption = element_text(size = 10),
          plot.title = element_text(hjust = 0.5, size = 20),
          plot.subtitle = element_text(hjust = 0.5, size = 18),
          plot.background = element_rect(colour = "grey70", linewidth = 2),
          plot.margin = margin(20, 10, 20, 10))
  })
  
  
  # CO2 emissions per capita of each country in a specific region
  output$region <- renderPlot({
    
    reg <- emissions %>% 
      filter(Region == input$regions) 
    
    ggplot(reg, aes(x = country_name, y = mean)) + 
      geom_col(fill = "#AF7AC5") +
      scale_x_discrete(labels = scales::wrap_format(5)) +
      scale_y_continuous(expand = c(0,NA),
                         labels = scales::label_number(prefix = "", suffix = " metric tons")) +
      theme_minimal() + 
      labs(x = "Country", y = "Mean CO2 Emissions Per Capita",
           title = "Mean CO2 Emissions Per Capita Per Country",
           subtitle = input$regions,
           caption = "Source: Ghosh, Koustav. “CO2 Emissions around the World.”") +
      theme(axis.text.x = element_text(size = 5),
            axis.text.y = element_text(size = 10),
            plot.caption = element_text(size = 10),
            axis.title = element_text(size = 12),
            plot.title = element_text(hjust = 0.5, size = 20),
            plot.subtitle = element_text(hjust = 0.5, size = 18),
            plot.background = element_rect(colour = "grey70", linewidth = 2),
            plot.margin = margin(20, 10, 20, 10),
            panel.grid.major.x = element_blank())
    
  })
  
  # Mean CO2 emissions per capita of each region
  output$world <- renderPlot({ 
    # for the global dataset
    SA_region <- emissions %>% 
      filter(Region == "South Asia") 
    SA_mean <- mean(SA_region$mean)
    
    SSA_region <- emissions %>% 
      filter(Region == "Sub-Saharan Africa") 
    SSA_mean <- mean(SSA_region$mean)
    
    ECA_region <- emissions %>% 
      filter(Region == "Europe & Central Asia") 
    ECA_mean <- mean(ECA_region$mean)
    
    MENA_region <- emissions %>% 
      filter(Region == "Middle East & North Africa") 
    MENA_mean <- mean(MENA_region$mean)
    
    LAC_region <- emissions %>% 
      filter(Region == "Latin America & Caribbean") 
    LAC_mean <- mean(LAC_region$mean)
    
    EAP_region <- emissions %>% 
      filter(Region == "East Asia & Pacific") 
    EAP_mean <- mean(EAP_region$mean)
    
    NA_region <- emissions %>% 
      filter(Region == "North America") 
    NA_mean <- mean(NA_region$mean)
    
    regions <- c("South Asia", "Sub-Saharan Africa", "Europe & Central Asia",
                 "Middle East & North Africa", "Latin America & Caribbean",
                 "East Asia & Pacific", "North America")
    region_means <- c(SA_mean, SSA_mean, ECA_mean, MENA_mean, 
                      LAC_mean, EAP_mean, NA_mean)
    
    df1 <- data.frame(regions, region_means)
    
    ggplot(df1, aes(x = regions, y = region_means)) +
      geom_col(fill = "#008080") +
      scale_y_continuous(labels = scales::label_number(prefix = "", suffix = " metric tons")) +
      scale_x_discrete(labels = scales::wrap_format(10)) +
      theme_minimal() + 
      labs(x = "Regions", y = "Mean CO2 Emissions Per Capita",
           title = "Mean CO2 Emissions Per Capita Per Region",
           subtitle = " ",
           caption = "Source: Ghosh, Koustav. “CO2 Emissions around the World.”") +
      theme(axis.text.x = element_text(size = 10),
            axis.text.y = element_text(size = 10),
            axis.title = element_text(size = 15),
            plot.caption = element_text(size = 10),
            plot.title = element_text(hjust = 0.5, size = 20),
            plot.background = element_rect(colour = "grey70", linewidth = 2),
            plot.margin = margin(20, 10, 20, 10),
            panel.grid.major.x = element_blank())
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
