shiny::runApp()
runApp()
runApp()
runApp('~/Desktop/final-app')
library(rsconnect)
rsconnect::setAccountInfo(name='kayleemo',
token='DE66869175DE411C8B06063CCBDC7C65',
secret='<SECRET>')
shiny::runApp()
# load libraries
library(shiny)
library(tidyverse)
emissions <- read_csv("data/CO2_emission.csv") %>%
drop_na()
emissions <- read_csv("data/CO2_emission.csv")
View(emissions)
View(emissions)
View(emissions)
View(emissions)
emissions <- read_csv("data/CO2_emission.csv") %>%
drop_na()
View(emissions)
View(emissions)
emissions <- emissions[, -35]
View(emissions)
View(emissions)
View(emissions)
emissions <- emissions[, -2]
emissions <- emissions[, -3]
emissions <- read_csv("data/CO2_emission.csv")
View(emissions)
emissions <- read_csv("data/CO2_emission.csv") %>%
drop_na() #there are 32 countries with missing data, dropping any country with NA
#cleaning data to keep only the necessary columns (Country name, region, and years 1990-2019)
emissions <- emissions[, -35] #Dropping last column because of duplicate 2019 columns
emissions <- emissions[, -2] #Dropping "country_code" column
emissions <- emissions[, -3] #Dropping "Indicator Name" column
colnames(emissions)[32]  <- "2019"
emissions <- read_csv("data/CO2_emission.csv") %>%
drop_na() #There are 32 countries with missing data, dropping any country with NA
#Cleaning data to keep only the necessary columns (Country name, region, and years 1990-2019)
emissions <- emissions[, -35] #Dropping last column because of duplicate 2019 columns
emissions <- emissions[, -2] #Dropping "country_code" column
emissions <- emissions[, -3] #Dropping "Indicator Name" column
#Cleaning column names
colnames(emissions)[32]  <- "2019" #Renaming last column to "2019"
colnames(emissions)[1]  <- "country_name" #Renaming name column to "country_name"
emissions$mean <-apply(emissions[, 3:32],1,mean)
region_names <- unique(emissions$Region)
country_names <- unique(emissions$country_name)
without_mean <- emissions[, -2]
View(without_mean)
without_mean <- without_mean[, -32]
View(without_mean)
country_data <- without_mean %>%
pivot_longer(cols = !country_name,
names_to = "year",
values_to = "emissions")
View(country_data)
random <-country_data %>%
filter(country_name == input$countries)
SA_region <- emissions %>%
filter(Region == "South Asia")
SA_mean <- mean(SA_region$mean)
View(SA_region)
SA_mean <- mean(SA_region$mean)
SA_mean <- mean(SA_region$mean)
regions <- c("South Asia", "Sub-Saharan Africa", "Europe & Central Asia",
"Middle East & North Africa", "Latin America & Caribbean",
"East Asia & Pacific", "North America")
df1 <- data.frame(regions, region_means)
regions <- c("South Asia", "Sub-Saharan Africa", "Europe & Central Asia",
"Middle East & North Africa", "Latin America & Caribbean",
"East Asia & Pacific", "North America")
region_means <- c(SA_mean, SSA_mean, ECA_mean, MENA_mean,
LAC_mean, EAP_mean, NA_mean)
df1 <- data.frame(regions, region_means)
df1 <- data.frame(regions, region_means)
region_means <- c(SA_mean, SSA_mean, ECA_mean, MENA_mean,
LAC_mean, EAP_mean, NA_mean)
#South Asia
#Creating a subset table for each region
SA_region <- emissions %>%
filter(Region == "South Asia")
#Calculating the mean CO2 emissions of each region
SA_mean <- mean(SA_region$mean)
#Sub-Saharan Africa
SSA_region <- emissions %>%
filter(Region == "Sub-Saharan Africa")
SSA_mean <- mean(SSA_region$mean)
#Europe & Central Asia
ECA_region <- emissions %>%
filter(Region == "Europe & Central Asia")
ECA_mean <- mean(ECA_region$mean)
#Middle East & North Africa
MENA_region <- emissions %>%
filter(Region == "Middle East & North Africa")
MENA_mean <- mean(MENA_region$mean)
#Latin America & Caribbean
LAC_region <- emissions %>%
filter(Region == "Latin America & Caribbean")
LAC_mean <- mean(LAC_region$mean)
#East Asia & Pacific
EAP_region <- emissions %>%
filter(Region == "East Asia & Pacific")
EAP_mean <- mean(EAP_region$mean)
#North America
NA_region <- emissions %>%
filter(Region == "North America")
NA_mean <- mean(NA_region$mean)
region_means <- c(SA_mean, SSA_mean, ECA_mean, MENA_mean,
LAC_mean, EAP_mean, NA_mean)
df1 <- data.frame(regions, region_means)
df2 <- data.frame(region_names, region_means)
View(df2)
View(df1)
Creating a data table to include only region names and the mean of that region
#Creating a static graph from df1
ggplot(df1, aes(x = regions, y = region_means)) +
geom_col(fill = "#008080") + #Bar graph with blue fill
scale_y_continuous(labels = scales::label_number(prefix = "", suffix = " metric tons")) + #Adding labels to y-axis
scale_x_discrete(labels = scales::wrap_format(10)) + #Wrapping x-axis text to avoid overlapping of country names
theme_minimal() +
labs(x = "Regions", y = "Mean CO2 Emissions Per Capita", #Adding axes titles
title = "Mean CO2 Emissions Per Capita Per Region", #Adding title of graph
subtitle = " ", #Adding space between title and graph
caption = "Source: Ghosh, Koustav. “CO2 Emissions around the World.”") + #Adding source of data
theme(axis.text.x = element_text(size = 10), #Setting text sizes and placements for all elements of graph
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 15),
plot.caption = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 20),
plot.background = element_rect(colour = "grey70", linewidth = 2),
plot.margin = margin(20, 10, 20, 10),
panel.grid.major.x = element_blank()) #Removing x-axis lines
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
